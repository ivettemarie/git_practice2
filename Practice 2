Last login: Thu Sep  2 17:23:05 on ttys000
ivetterosado@MacBook-Air-Marie ~ % git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
ivetterosado@MacBook-Air-Marie ~ % mkdir git_practice
ivetterosado@MacBook-Air-Marie ~ % cd git_practice
ivetterosado@MacBook-Air-Marie git_practice % git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /Users/ivetterosado/git_practice/.git/
ivetterosado@MacBook-Air-Marie git_practice % echo "Hello Git and GitHub" >> README.txt
ivetterosado@MacBook-Air-Marie git_practice % git add README.txt
ivetterosado@MacBook-Air-Marie git_practice % git commit -m "First commit"
[master (root-commit) 74bee90] First commit
 Committer: Ivette Rosado <ivetterosado@MacBook-Air-Marie.local>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
 create mode 100644 README.txt
ivetterosado@MacBook-Air-Marie git_practice % CLEAR

ivetterosado@MacBook-Air-Marie git_practice % git --version
git version 2.30.1 (Apple Git-130)
ivetterosado@MacBook-Air-Marie git_practice % $git config --global user.name "Ivette Marie"
zsh: command not found: config
ivetterosado@MacBook-Air-Marie git_practice % git config --global user.name "Ivette Marie"
ivetterosado@MacBook-Air-Marie git_practice % $ git config --global user . name
zsh: command not found: $
ivetterosado@MacBook-Air-Marie git_practice % $git config --global user .name "Ivette Marie" 
zsh: command not found: config
ivetterosado@MacBook-Air-Marie git_practice % $ git config --global user .name "Ivette Marie"
zsh: command not found: $
ivetterosado@MacBook-Air-Marie git_practice % git config --global user .name "Ivette Marie"
error: key does not contain a section: user
ivetterosado@MacBook-Air-Marie git_practice % git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

ivetterosado@MacBook-Air-Marie git_practice % git config --global user.name "Ivette Marie"
ivetterosado@MacBook-Air-Marie git_practice % git config --global user.name
Ivette Marie
ivetterosado@MacBook-Air-Marie git_practice % git config --global user.email "thetechnologygal@gmail.com" 
ivetterosado@MacBook-Air-Marie git_practice % git config --global user.email
thetechnologygal@gmail.com
ivetterosado@MacBook-Air-Marie git_practice % git credential-osxkeychain
usage: git credential-osxkeychain <get|store|erase>
ivetterosado@MacBook-Air-Marie git_practice % git config --global credential.helper osxkeychain
ivetterosado@MacBook-Air-Marie git_practice % mkdir git_practice
ivetterosado@MacBook-Air-Marie git_practice % cd git_practice
ivetterosado@MacBook-Air-Marie git_practice % git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /Users/ivetterosado/git_practice/git_practice/.git/
ivetterosado@MacBook-Air-Marie git_practice % echo "Hello Git and Github" >> README.txt
ivetterosado@MacBook-Air-Marie git_practice % git add README.txt  
ivetterosado@MacBook-Air-Marie git_practice % git commit -m "First commit"
[master (root-commit) f0ac4d2] First commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.txt
ivetterosado@MacBook-Air-Marie git_practice % git status
On branch master
nothing to commit, working tree clean
ivetterosado@MacBook-Air-Marie git_practice % git remote add origin https://github.com/ivettemarie/git_practice2.git
ivetterosado@MacBook-Air-Marie git_practice % git push -u origin main
error: src refspec main does not match any
error: failed to push some refs to 'https://github.com/ivettemarie/git_practice2.git'
ivetterosado@MacBook-Air-Marie git_practice % git branch -M main
ivetterosado@MacBook-Air-Marie git_practice % git push -u origin main
Username for 'https://github.com': ivettemarie
Password for 'https://ivettemarie@github.com': 
remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
fatal: Authentication failed for 'https://github.com/ivettemarie/git_practice2.git/'
ivetterosado@MacBook-Air-Marie git_practice % % git push -u origin main
fg: no current job
ivetterosado@MacBook-Air-Marie git_practice % git remote add origin
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from

ivetterosado@MacBook-Air-Marie git_practice % git push -u origin main
Username for 'https://github.com': ivettemarie
Password for 'https://ivettemarie@github.com': 
remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
fatal: Authentication failed for 'https://github.com/ivettemarie/git_practice2.git/'
ivetterosado@MacBook-Air-Marie git_practice % 
